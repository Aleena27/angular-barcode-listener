(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.9.2

/*
Listen for scan with specified product prefix.
@param [Function] onScan - callback to call when scan is successful. Passes the scanned string.
@param [String] prefix - character prefix that appears before the scanned string (e.g. 'P%', 'C%')
 */
module.exports = angular.module('barcodeListener', []).directive('barcodeListener', [
  '$rootScope', '$timeout', '$document', function($rootScope, $timeout, $document) {
    return {
      restrict: 'EA',
      scope: {
        onScan: '=',
        prefix: '@',
        scanDuration: '@?'
      },
      link: function(scope, element, attrs) {
        var codeBuffer, keypressHandler, scanDuration, scannedPrefix, scanning;
        scanDuration = +attrs.scanDuration || 50;
        codeBuffer = scannedPrefix = '';
        scanning = false;
        keypressHandler = function($event) {
          var char, charIndex, expectedPrefix, finishScan;
          char = String.fromCharCode($event.which);
          charIndex = scope.prefix.indexOf(char);
          expectedPrefix = scope.prefix.slice(0, charIndex);
          if (!scanning) {
            scanning = true;
            finishScan = function() {
              if (codeBuffer) {
                scope.onScan(codeBuffer);
              }
              scannedPrefix = codeBuffer = '';
              return scanning = false;
            };
            $timeout(finishScan, scanDuration);
          }
          if (scannedPrefix === scope.prefix && /[^\s]/.test(char)) {
            return codeBuffer += char;
          } else if (scannedPrefix === expectedPrefix && char === scope.prefix.charAt(charIndex)) {
            return scannedPrefix += char;
          }
        };
        $document.on('keypress', keypressHandler);
        return element.on('$destroy', function() {
          return $document.off('keypress', keypressHandler);
        });
      }
    };
  }
]);

},{}]},{},[1])